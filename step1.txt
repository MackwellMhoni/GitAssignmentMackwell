Mackwell
Microsoft Windows [Version 10.0.26100.6725]
(c) Microsoft Corporation. All rights reserved.

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git init
Initialized empty Git repository in C:/Users/mackwell.mhoni/source/repos/GitAssignmentMackwell/.git/

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git remote add origin
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git remote add origin https://github.com/MackwellMhoni/GitAssignmentMackwell.git

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git checkout -M main
error: unknown switch `M'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --[no-]guess          second guess 'git checkout <no-such-branch>' (default)
    --[no-]overlay        use overlay mode (default)
    -q, --[no-]quiet      suppress progress reporting
    --[no-]recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --[no-]progress       force progress reporting
    -m, --[no-]merge      perform a 3-way merge with the new branch
    --[no-]conflict <style>
                          conflict style (merge, diff3, or zdiff3)
    -d, --[no-]detach     detach HEAD at named commit
    -t, --[no-]track[=(direct|inherit)]
                          set branch tracking configuration
    -f, --[no-]force      force checkout (throw away local modifications)
    --[no-]orphan <new-branch>
                          new unborn branch
    --[no-]overwrite-ignore
                          update ignored files (default)
    --[no-]ignore-other-worktrees
                          do not check if another worktree is using this branch
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --[no-]patch      select hunks interactively
    -U, --unified <n>     generate diffs with <n> lines context
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --[no-]ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --[no-]pathspec-from-file <file>
                          read pathspec from file
    --[no-]pathspec-file-nul
                          with --pathspec-from-file, pathspec elements are separated with NUL character


C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch main
fatal: not a valid object name: 'master'

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git checkout -b Step1
Switched to a new branch 'Step1'

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git status
On branch Step1

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        step1.txt
        step2.txt

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git add step1.txt

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git commit -m "First Commit"
[Step1 (root-commit) c27fa17] First Commit
 1 file changed, 1 insertion(+)
 create mode 100644 step1.txt

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git push origin Step1
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 219 bytes | 109.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote:
remote: Create a pull request for 'Step1' on GitHub by visiting:
remote:      https://github.com/MackwellMhoni/GitAssignmentMackwell/pull/new/Step1
remote:
To https://github.com/MackwellMhoni/GitAssignmentMackwell.git
 * [new branch]      Step1 -> Step1

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git add step2.txt

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git commit -m "Second Commit"
[Step1 6001211] Second Commit
 1 file changed, 1 insertion(+)
 create mode 100644 step2.txt

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git push origin Step1
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 276 bytes | 138.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/MackwellMhoni/GitAssignmentMackwell.git
   c27fa17..6001211  Step1 -> Step1

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch
* Step1

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git push -u origin main
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/MackwellMhoni/GitAssignmentMackwell.git'

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git checkout main
error: pathspec 'main' did not match any file(s) known to git

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch -b main
error: unknown switch `b'
usage: git branch [<options>] [-r | -a] [--merged] [--no-merged]
   or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>]
   or: git branch [<options>] [-l] [<pattern>...]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --[no-]verbose    show hash and subject, give twice for upstream branch
    -q, --[no-]quiet      suppress informational messages
    -t, --[no-]track[=(direct|inherit)]
                          set branch tracking configuration
    -u, --[no-]set-upstream-to <upstream>
                          change the upstream info
    --[no-]unset-upstream unset the upstream info
    --[no-]color[=<when>] use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --[no-]abbrev[=<n>]   use <n> digits to display object names

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --[no-]delete     delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --[no-]move       move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    --[no-]omit-empty     do not output a newline after empty formatted refs
    -c, --[no-]copy       copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --[no-]list       list branch names
    --[no-]show-current   show current branch name
    --[no-]create-reflog  create the branch's reflog
    --[no-]edit-description
                          edit the description for the branch
    -f, --[no-]force      force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --[no-]column[=<style>]
                          list branches in columns
    --[no-]sort <key>     field name to sort on
    --[no-]points-at <object>
                          print only branches of the object
    -i, --[no-]ignore-case
                          sorting and filtering are case insensitive
    --[no-]recurse-submodules
                          recurse through submodules
    --[no-]format <format>
                          format to use for the output


C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git checkout -b main
Switched to a new branch 'main'

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch --set-upstream-to=origin
fatal: the requested upstream branch 'origin' does not exist
hint:
hint: If you are planning on basing your work on an upstream
hint: branch that already exists at the remote, you may need to
hint: run "git fetch" to retrieve it.
hint:
hint: If you are planning to push out a new local branch that
hint: will track its remote counterpart, you may want to use
hint: "git push -u" to set the upstream config as you push.
hint: Disable this message with "git config set advice.setUpstreamFailure false"

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch --set-upstream-to=main
warning: not setting branch 'main' as its own upstream

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git branch
  Step1
* main

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git push origin main
To https://github.com/MackwellMhoni/GitAssignmentMackwell.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/MackwellMhoni/GitAssignmentMackwell.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git status
On branch main
nothing to commit, working tree clean

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git log --oneline
6001211 (HEAD -> main, origin/Step1, Step1) Second Commit
c27fa17 First Commit

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git merge Step1
Already up to date.

C:\Users\mackwell.mhoni\source\repos\GitAssignmentMackwell>git checkout Step1
Switched to branch 'Step1'